version: '3'

services:
  postgre:
    image: debezium/postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - maru
  mongo:
    image: mongo:6.0.5
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db
    networks:
      - maru
  # sql-server:
  #   image: mcr.microsoft.com/mssql/server:2017-latest
  #   ports:
  #     - 1433:1433
  #   environment:
  #     SA_PASSWORD: "R4z0r1zm3#"
  #     ACCEPT_EULA: "Y"
  #   networks:
  #     - maru
  redis:
    image: redis:7.0.11
    restart: always
    ports:
      - "6379:6379"
    networks:
      - maru
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
      - 9301:9300
    networks:
      - maru
  
  portainer:
    image: portainer/portainer-ce:2.18.4-alpine
    container_name: portainer
    restart: always
    ports:
      - 8000:8000
      - 9443:9443
      - 1111:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - maru


networks:
  maru:
volumes:
  pg_data:
  mongo_data:
  elasticsearch_data:
  portainer_data: